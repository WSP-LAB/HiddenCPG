<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="tests.languages.c.antlrParsers.functionParser.AssignmentTests" tests="3" skipped="0" failures="0" errors="0" timestamp="2020-08-24T08:41:32" hostname="GPU-Windu" time="0.008">
  <properties/>
  <testcase name="testPrivateInName" classname="tests.languages.c.antlrParsers.functionParser.AssignmentTests" time="0.001"/>
  <testcase name="testComplexAssignment" classname="tests.languages.c.antlrParsers.functionParser.AssignmentTests" time="0.006"/>
  <testcase name="testAssignmentExpr" classname="tests.languages.c.antlrParsers.functionParser.AssignmentTests" time="0.001"/>
  <system-out><![CDATA[(statements (statement (simple_decl (var_decl (type_name struct (base_type acpi_battery)) (init_declarator_list (init_declarator (declarator (ptrs (ptr_operator *)) (identifier battery)) = (initializer (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (postfix_expression (primary_expression (identifier m))) -> (identifier (access_specifier private))))))))))))))))))) ;)))))
(statements (statement (expr_statement (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier k)))))))))))))))) (assignment_operator +=) (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression ( (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression ( (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier c)))))))))))))))) (assignment_operator =) (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (postfix_expression (primary_expression (identifier text))) [ (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier k)))))))))))))))))) ]))))))))))))))))) )))))))) (relational_operator >=) (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier sBMHCharSetSize))))))))))))))))))) ))))))))))))))) ? (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier patlen)))))))))))))))))) : (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (postfix_expression (primary_expression (identifier skip))) [ (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier c)))))))))))))))))) ])))))))))))))))))) ;)))
(statements (statement (expr_statement (expr (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier x)))))))))))))))) (assignment_operator =) (assign_expr (conditional_expression (or_expression (and_expression (inclusive_or_expression (exclusive_or_expression (bit_and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (identifier y)))))) + (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))))) ;)))
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
