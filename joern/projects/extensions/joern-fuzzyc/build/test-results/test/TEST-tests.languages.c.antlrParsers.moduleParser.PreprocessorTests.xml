<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" tests="6" skipped="0" failures="0" errors="0" timestamp="2020-08-24T08:41:32" hostname="GPU-Windu" time="0.001">
  <properties/>
  <testcase name="testStartingPreProcElse" classname="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" time="0.0"/>
  <testcase name="testPreprocIfNesting" classname="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" time="0.0"/>
  <testcase name="testPreprocIfBeforeFunc" classname="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" time="0.001"/>
  <testcase name="testPreprocIfInElse" classname="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" time="0.0"/>
  <testcase name="testPreprocessorIfs" classname="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" time="0.0"/>
  <testcase name="testNestedPreprocessorIfs" classname="tests.languages.c.antlrParsers.moduleParser.PreprocessorTests" time="0.0"/>
  <system-out><![CDATA[(code (water #ifdef foo\n) (function_def (return_type (type_name (base_type int))) (function_name (identifier foo)) (function_param_list ( )) (compound_statement { #else\n { #endif\n })) (water abc) (water #endif\n))
(code (function_def (function_name (identifier foo)) (function_param_list ( )) (compound_statement { #ifdef x\n #ifdef y\n #else\n #endif\n #endif\n abc ( ) ; })) (water foo) (water () (water )) (water ;))
(code (water #ifdef foo\n) (function_def (return_type (type_name (base_type int))) (function_name (identifier foo)) (function_param_list ( )) (compound_statement { #if x\n foo ( ) ; #else\n #endif\n })) (water abc) (water #endif\n))
(code (function_def (function_name (identifier foo)) (function_param_list ( )) (compound_statement { #ifdef x\n #else\n #ifdef y\n #endif\n #endif\n abc ( ) ; })) (water foo) (water () (water )) (water ;))
(function_def (return_type (type_name (base_type int))) (function_name (identifier foo)) (function_param_list ( )) (compound_statement { #if bar\n { #endif\n }))
(function_def (return_type (type_name (base_type int))) (function_name (identifier foo)) (function_param_list ( )) (compound_statement { #if bar\n #if bar2\n { #endif #endif\n }))
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
